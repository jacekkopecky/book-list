(()=>{let e=[],t="";/// <reference lib="webworker" />
async function a(){console.log({version:t});let a=[...e,"/version.txt"];for(let e of a)console.log("adding cache",e);let i=await caches.open(t);await i.addAll(a)}async function i(){let e=await caches.keys();await Promise.all(e.map(e=>e!==t?(console.log("deleting cache for version",e),caches.delete(e)):void 0))}async function n(e){if("GET"===e.method){let t=await caches.match(e);if(t)return t;if(e.url.startsWith(self.location.origin)){let e=await caches.match(new URL("/index.html",self.location.origin));if(e)return e}}return fetch(e)}e=["/index.html","/manifest.webmanifest","/img/icon.svg","/index.d539dbac.css","/index.ee8ed5c5.js","/404.html"],t="36109f53",self.addEventListener("install",e=>e.waitUntil(a())),self.addEventListener("activate",e=>e.waitUntil(i())),self.addEventListener("fetch",e=>{e.respondWith(n(e.request))})})();//# sourceMappingURL=service-worker.js.map

//# sourceMappingURL=service-worker.js.map
